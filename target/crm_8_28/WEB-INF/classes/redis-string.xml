<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

    <context:property-placeholder location="classpath:redis.properties"></context:property-placeholder>
    <!--redis数据库连接池-->
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <!--ip-->
        <property name="hostName" value="${redis.host}"></property>
        <!--Redis端口号-->
        <property name="port" value="${redis.port}"></property>
        <!--Redis密码-->
        <property name="password" value="${redis.pass}"></property>
        <!--Redis数据库-->
        <property name="database" value="${redis.database}"></property>
        <property name="poolConfig" ref="jedisPoolConfig"></property>
    </bean>
        <!--连接池配置-->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!--最大空闲时间不配有默认-->
        <property name="maxIdle" value="${redis.maxIdle}"></property>
        <!--最大等待时常不配有默认-->
        <property name="maxWaitMillis" value="${redis.maxWait}"></property>
        <property name="testOnBorrow" value="true"></property>
    </bean>
    <!--RedisTemplate类似于hibernateTemplate-->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory"   ref="jedisConnectionFactory" />
        <!--
        将数据存放到Redis中，以及数据读取。这里必然涉及到数据的系列化和反系列化
        如果不配置Serializer，那么存储的时候缺省使用String，如果用User类型存储，
        那么会提示错误User can't cast to String！！
        -->
        <property name="keySerializer" >
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
        <property name="valueSerializer" >
            <bean class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer" />
        </property>
        <property name="hashKeySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="hashValueSerializer">
            <bean class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer"/>
        </property>
        <!--开启事务  -->
        <property name="enableTransactionSupport" value="true"></property>
    </bean>
    <bean id="redisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
       <constructor-arg name="redisOperations" ref="redisTemplate"></constructor-arg>
    </bean>
    <!---->
    <cache:annotation-driven cache-manager="redisCacheManager"></cache:annotation-driven>
    <!--中间类-->
    <!--<bean id="redisConnRef" class="com.huayu.RedisUtils.RedisConnRef">
        <property name="connectionFactory" ref="jedisConnectionFactory"></property>
    </bean>-->
</beans>